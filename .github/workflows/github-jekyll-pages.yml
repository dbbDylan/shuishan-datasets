name: Deploy Jekyll with GitHub Pages

on:
  # Runs on pushes and pull requests targeting the gh-pages branch
  push:
    branches:
      - 'gh-pages'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: 'github-pages'
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.1'  # Specify Ruby version (change to your preferred version)

      # Cache Ruby gems to speed up future builds
      - name: Cache Ruby gems
        uses: actions/cache@v3
        with:
          path: vendor/bundle  # Cache gem dependencies in the vendor directory
          key: ${{ runner.os }}-ruby-${{ hashFiles('**/Gemfile.lock') }}  # Cache based on Gemfile.lock changes
          restore-keys: |
            ${{ runner.os }}-ruby-

      - name: Install dependencies
        run: |
          bundle install --path vendor/bundle  # Install gems into the cached directory

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Build with Jekyll
        uses: actions/jekyll-build-pages@v1
        with:
          source: ./
          destination: ./_site

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
